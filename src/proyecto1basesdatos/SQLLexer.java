// Generated from SQL.g4 by ANTLR 4.4
package proyecto1basesdatos;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SQLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__11=1, T__10=2, T__9=3, T__8=4, T__7=5, T__6=6, T__5=7, T__4=8, T__3=9, 
		T__2=10, T__1=11, T__0=12, CREATE=13, DATABASE=14, DATABASES=15, ALTER=16, 
		RENAMETO=17, DROP=18, SHOW=19, USE=20, TABLE=21, INT=22, FLOAT=23, DATE=24, 
		CHAR=25, CONSTRAINT=26, PRIMARY=27, KEY=28, FOREIGN=29, CHECK=30, REFERENCES=31, 
		TABLES=32, COLUMN=33, COLUMNS=34, FROM=35, ADD=36, AND=37, OR=38, NOT=39, 
		INSERT=40, INTO=41, WHERE=42, UPDATE=43, SET=44, DELETE=45, SELECT=46, 
		ORDER=47, BY=48, ASC=49, NULL=50, DESC=51, VALUES=52, WS=53, DATE_VAL=54, 
		NUM=55, ID=56, CHAR_VAL=57, FLOAT_VAL=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'"
	};
	public static final String[] ruleNames = {
		"T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", 
		"T__2", "T__1", "T__0", "CREATE", "DATABASE", "DATABASES", "ALTER", "RENAMETO", 
		"DROP", "SHOW", "USE", "TABLE", "INT", "FLOAT", "DATE", "CHAR", "CONSTRAINT", 
		"PRIMARY", "KEY", "FOREIGN", "CHECK", "REFERENCES", "TABLES", "COLUMN", 
		"COLUMNS", "FROM", "ADD", "AND", "OR", "NOT", "INSERT", "INTO", "WHERE", 
		"UPDATE", "SET", "DELETE", "SELECT", "ORDER", "BY", "ASC", "NULL", "DESC", 
		"VALUES", "LETTER", "DIGIT", "WS", "DATE_VAL", "NUM", "ID", "CHAR_VAL", 
		"FLOAT_VAL"
	};


	public SQLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SQL.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u01c0\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3"+
		"\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37"+
		"\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%"+
		"\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*"+
		"\3*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3.\3.\3.\3.\3."+
		"\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3"+
		"\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3"+
		"\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\67\3\67\38\68\u0191"+
		"\n8\r8\168\u0192\38\38\39\39\39\39\39\39\39\39\39\39\39\39\39\3:\3:\7"+
		":\u01a6\n:\f:\16:\u01a9\13:\3;\3;\3;\3;\7;\u01af\n;\f;\16;\u01b2\13;\3"+
		"<\3<\7<\u01b6\n<\f<\16<\u01b9\13<\3<\3<\3=\3=\3=\3=\2\2>\3\3\5\4\7\5\t"+
		"\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\2m\2o\67q8s9u:w;y"+
		"<\3\2\6\4\2C\\c|\5\2\13\f\16\17\"\"\4\2//aa\5\2\f\f\17\17))\u01c3\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2"+
		"s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\3{\3\2\2\2\5~\3\2\2\2\7\u0081"+
		"\3\2\2\2\t\u0083\3\2\2\2\13\u0085\3\2\2\2\r\u0087\3\2\2\2\17\u0089\3\2"+
		"\2\2\21\u008c\3\2\2\2\23\u008e\3\2\2\2\25\u0090\3\2\2\2\27\u0092\3\2\2"+
		"\2\31\u0094\3\2\2\2\33\u0096\3\2\2\2\35\u009d\3\2\2\2\37\u00a6\3\2\2\2"+
		"!\u00b0\3\2\2\2#\u00b6\3\2\2\2%\u00c0\3\2\2\2\'\u00c5\3\2\2\2)\u00ca\3"+
		"\2\2\2+\u00ce\3\2\2\2-\u00d4\3\2\2\2/\u00d8\3\2\2\2\61\u00de\3\2\2\2\63"+
		"\u00e3\3\2\2\2\65\u00e8\3\2\2\2\67\u00f3\3\2\2\29\u00fb\3\2\2\2;\u00ff"+
		"\3\2\2\2=\u0107\3\2\2\2?\u010d\3\2\2\2A\u0118\3\2\2\2C\u011f\3\2\2\2E"+
		"\u0126\3\2\2\2G\u012e\3\2\2\2I\u0133\3\2\2\2K\u0137\3\2\2\2M\u013b\3\2"+
		"\2\2O\u013e\3\2\2\2Q\u0142\3\2\2\2S\u0149\3\2\2\2U\u014e\3\2\2\2W\u0154"+
		"\3\2\2\2Y\u015b\3\2\2\2[\u015f\3\2\2\2]\u0166\3\2\2\2_\u016d\3\2\2\2a"+
		"\u0173\3\2\2\2c\u0176\3\2\2\2e\u017a\3\2\2\2g\u017f\3\2\2\2i\u0184\3\2"+
		"\2\2k\u018b\3\2\2\2m\u018d\3\2\2\2o\u0190\3\2\2\2q\u0196\3\2\2\2s\u01a3"+
		"\3\2\2\2u\u01aa\3\2\2\2w\u01b3\3\2\2\2y\u01bc\3\2\2\2{|\7>\2\2|}\7?\2"+
		"\2}\4\3\2\2\2~\177\7>\2\2\177\u0080\7@\2\2\u0080\6\3\2\2\2\u0081\u0082"+
		"\7*\2\2\u0082\b\3\2\2\2\u0083\u0084\7+\2\2\u0084\n\3\2\2\2\u0085\u0086"+
		"\7,\2\2\u0086\f\3\2\2\2\u0087\u0088\7=\2\2\u0088\16\3\2\2\2\u0089\u008a"+
		"\7@\2\2\u008a\u008b\7?\2\2\u008b\20\3\2\2\2\u008c\u008d\7>\2\2\u008d\22"+
		"\3\2\2\2\u008e\u008f\7.\2\2\u008f\24\3\2\2\2\u0090\u0091\7?\2\2\u0091"+
		"\26\3\2\2\2\u0092\u0093\7@\2\2\u0093\30\3\2\2\2\u0094\u0095\7\60\2\2\u0095"+
		"\32\3\2\2\2\u0096\u0097\7E\2\2\u0097\u0098\7T\2\2\u0098\u0099\7G\2\2\u0099"+
		"\u009a\7C\2\2\u009a\u009b\7V\2\2\u009b\u009c\7G\2\2\u009c\34\3\2\2\2\u009d"+
		"\u009e\7F\2\2\u009e\u009f\7C\2\2\u009f\u00a0\7V\2\2\u00a0\u00a1\7C\2\2"+
		"\u00a1\u00a2\7D\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4\7U\2\2\u00a4\u00a5"+
		"\7G\2\2\u00a5\36\3\2\2\2\u00a6\u00a7\7F\2\2\u00a7\u00a8\7C\2\2\u00a8\u00a9"+
		"\7V\2\2\u00a9\u00aa\7C\2\2\u00aa\u00ab\7D\2\2\u00ab\u00ac\7C\2\2\u00ac"+
		"\u00ad\7U\2\2\u00ad\u00ae\7G\2\2\u00ae\u00af\7U\2\2\u00af \3\2\2\2\u00b0"+
		"\u00b1\7C\2\2\u00b1\u00b2\7N\2\2\u00b2\u00b3\7V\2\2\u00b3\u00b4\7G\2\2"+
		"\u00b4\u00b5\7T\2\2\u00b5\"\3\2\2\2\u00b6\u00b7\7T\2\2\u00b7\u00b8\7G"+
		"\2\2\u00b8\u00b9\7P\2\2\u00b9\u00ba\7C\2\2\u00ba\u00bb\7O\2\2\u00bb\u00bc"+
		"\7G\2\2\u00bc\u00bd\7\"\2\2\u00bd\u00be\7V\2\2\u00be\u00bf\7Q\2\2\u00bf"+
		"$\3\2\2\2\u00c0\u00c1\7F\2\2\u00c1\u00c2\7T\2\2\u00c2\u00c3\7Q\2\2\u00c3"+
		"\u00c4\7R\2\2\u00c4&\3\2\2\2\u00c5\u00c6\7U\2\2\u00c6\u00c7\7J\2\2\u00c7"+
		"\u00c8\7Q\2\2\u00c8\u00c9\7Y\2\2\u00c9(\3\2\2\2\u00ca\u00cb\7W\2\2\u00cb"+
		"\u00cc\7U\2\2\u00cc\u00cd\7G\2\2\u00cd*\3\2\2\2\u00ce\u00cf\7V\2\2\u00cf"+
		"\u00d0\7C\2\2\u00d0\u00d1\7D\2\2\u00d1\u00d2\7N\2\2\u00d2\u00d3\7G\2\2"+
		"\u00d3,\3\2\2\2\u00d4\u00d5\7K\2\2\u00d5\u00d6\7P\2\2\u00d6\u00d7\7V\2"+
		"\2\u00d7.\3\2\2\2\u00d8\u00d9\7H\2\2\u00d9\u00da\7N\2\2\u00da\u00db\7"+
		"Q\2\2\u00db\u00dc\7C\2\2\u00dc\u00dd\7V\2\2\u00dd\60\3\2\2\2\u00de\u00df"+
		"\7F\2\2\u00df\u00e0\7C\2\2\u00e0\u00e1\7V\2\2\u00e1\u00e2\7G\2\2\u00e2"+
		"\62\3\2\2\2\u00e3\u00e4\7E\2\2\u00e4\u00e5\7J\2\2\u00e5\u00e6\7C\2\2\u00e6"+
		"\u00e7\7T\2\2\u00e7\64\3\2\2\2\u00e8\u00e9\7E\2\2\u00e9\u00ea\7Q\2\2\u00ea"+
		"\u00eb\7P\2\2\u00eb\u00ec\7U\2\2\u00ec\u00ed\7V\2\2\u00ed\u00ee\7T\2\2"+
		"\u00ee\u00ef\7C\2\2\u00ef\u00f0\7K\2\2\u00f0\u00f1\7P\2\2\u00f1\u00f2"+
		"\7V\2\2\u00f2\66\3\2\2\2\u00f3\u00f4\7R\2\2\u00f4\u00f5\7T\2\2\u00f5\u00f6"+
		"\7K\2\2\u00f6\u00f7\7O\2\2\u00f7\u00f8\7C\2\2\u00f8\u00f9\7T\2\2\u00f9"+
		"\u00fa\7[\2\2\u00fa8\3\2\2\2\u00fb\u00fc\7M\2\2\u00fc\u00fd\7G\2\2\u00fd"+
		"\u00fe\7[\2\2\u00fe:\3\2\2\2\u00ff\u0100\7H\2\2\u0100\u0101\7Q\2\2\u0101"+
		"\u0102\7T\2\2\u0102\u0103\7G\2\2\u0103\u0104\7K\2\2\u0104\u0105\7I\2\2"+
		"\u0105\u0106\7P\2\2\u0106<\3\2\2\2\u0107\u0108\7E\2\2\u0108\u0109\7J\2"+
		"\2\u0109\u010a\7G\2\2\u010a\u010b\7E\2\2\u010b\u010c\7M\2\2\u010c>\3\2"+
		"\2\2\u010d\u010e\7T\2\2\u010e\u010f\7G\2\2\u010f\u0110\7H\2\2\u0110\u0111"+
		"\7G\2\2\u0111\u0112\7T\2\2\u0112\u0113\7G\2\2\u0113\u0114\7P\2\2\u0114"+
		"\u0115\7E\2\2\u0115\u0116\7G\2\2\u0116\u0117\7U\2\2\u0117@\3\2\2\2\u0118"+
		"\u0119\7V\2\2\u0119\u011a\7C\2\2\u011a\u011b\7D\2\2\u011b\u011c\7N\2\2"+
		"\u011c\u011d\7G\2\2\u011d\u011e\7U\2\2\u011eB\3\2\2\2\u011f\u0120\7E\2"+
		"\2\u0120\u0121\7Q\2\2\u0121\u0122\7N\2\2\u0122\u0123\7W\2\2\u0123\u0124"+
		"\7O\2\2\u0124\u0125\7P\2\2\u0125D\3\2\2\2\u0126\u0127\7E\2\2\u0127\u0128"+
		"\7Q\2\2\u0128\u0129\7N\2\2\u0129\u012a\7W\2\2\u012a\u012b\7O\2\2\u012b"+
		"\u012c\7P\2\2\u012c\u012d\7U\2\2\u012dF\3\2\2\2\u012e\u012f\7H\2\2\u012f"+
		"\u0130\7T\2\2\u0130\u0131\7Q\2\2\u0131\u0132\7O\2\2\u0132H\3\2\2\2\u0133"+
		"\u0134\7C\2\2\u0134\u0135\7F\2\2\u0135\u0136\7F\2\2\u0136J\3\2\2\2\u0137"+
		"\u0138\7C\2\2\u0138\u0139\7P\2\2\u0139\u013a\7F\2\2\u013aL\3\2\2\2\u013b"+
		"\u013c\7Q\2\2\u013c\u013d\7T\2\2\u013dN\3\2\2\2\u013e\u013f\7P\2\2\u013f"+
		"\u0140\7Q\2\2\u0140\u0141\7V\2\2\u0141P\3\2\2\2\u0142\u0143\7K\2\2\u0143"+
		"\u0144\7P\2\2\u0144\u0145\7U\2\2\u0145\u0146\7G\2\2\u0146\u0147\7T\2\2"+
		"\u0147\u0148\7V\2\2\u0148R\3\2\2\2\u0149\u014a\7K\2\2\u014a\u014b\7P\2"+
		"\2\u014b\u014c\7V\2\2\u014c\u014d\7Q\2\2\u014dT\3\2\2\2\u014e\u014f\7"+
		"Y\2\2\u014f\u0150\7J\2\2\u0150\u0151\7G\2\2\u0151\u0152\7T\2\2\u0152\u0153"+
		"\7G\2\2\u0153V\3\2\2\2\u0154\u0155\7W\2\2\u0155\u0156\7R\2\2\u0156\u0157"+
		"\7F\2\2\u0157\u0158\7C\2\2\u0158\u0159\7V\2\2\u0159\u015a\7G\2\2\u015a"+
		"X\3\2\2\2\u015b\u015c\7U\2\2\u015c\u015d\7G\2\2\u015d\u015e\7V\2\2\u015e"+
		"Z\3\2\2\2\u015f\u0160\7F\2\2\u0160\u0161\7G\2\2\u0161\u0162\7N\2\2\u0162"+
		"\u0163\7G\2\2\u0163\u0164\7V\2\2\u0164\u0165\7G\2\2\u0165\\\3\2\2\2\u0166"+
		"\u0167\7U\2\2\u0167\u0168\7G\2\2\u0168\u0169\7N\2\2\u0169\u016a\7G\2\2"+
		"\u016a\u016b\7E\2\2\u016b\u016c\7V\2\2\u016c^\3\2\2\2\u016d\u016e\7Q\2"+
		"\2\u016e\u016f\7T\2\2\u016f\u0170\7F\2\2\u0170\u0171\7G\2\2\u0171\u0172"+
		"\7T\2\2\u0172`\3\2\2\2\u0173\u0174\7D\2\2\u0174\u0175\7[\2\2\u0175b\3"+
		"\2\2\2\u0176\u0177\7C\2\2\u0177\u0178\7U\2\2\u0178\u0179\7E\2\2\u0179"+
		"d\3\2\2\2\u017a\u017b\7P\2\2\u017b\u017c\7W\2\2\u017c\u017d\7N\2\2\u017d"+
		"\u017e\7N\2\2\u017ef\3\2\2\2\u017f\u0180\7F\2\2\u0180\u0181\7G\2\2\u0181"+
		"\u0182\7U\2\2\u0182\u0183\7E\2\2\u0183h\3\2\2\2\u0184\u0185\7X\2\2\u0185"+
		"\u0186\7C\2\2\u0186\u0187\7N\2\2\u0187\u0188\7W\2\2\u0188\u0189\7G\2\2"+
		"\u0189\u018a\7U\2\2\u018aj\3\2\2\2\u018b\u018c\t\2\2\2\u018cl\3\2\2\2"+
		"\u018d\u018e\4\62;\2\u018en\3\2\2\2\u018f\u0191\t\3\2\2\u0190\u018f\3"+
		"\2\2\2\u0191\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193"+
		"\u0194\3\2\2\2\u0194\u0195\b8\2\2\u0195p\3\2\2\2\u0196\u0197\7)\2\2\u0197"+
		"\u0198\5m\67\2\u0198\u0199\5m\67\2\u0199\u019a\5m\67\2\u019a\u019b\5m"+
		"\67\2\u019b\u019c\7/\2\2\u019c\u019d\5m\67\2\u019d\u019e\5m\67\2\u019e"+
		"\u019f\7/\2\2\u019f\u01a0\5m\67\2\u01a0\u01a1\5m\67\2\u01a1\u01a2\7)\2"+
		"\2\u01a2r\3\2\2\2\u01a3\u01a7\5m\67\2\u01a4\u01a6\5m\67\2\u01a5\u01a4"+
		"\3\2\2\2\u01a6\u01a9\3\2\2\2\u01a7\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8"+
		"t\3\2\2\2\u01a9\u01a7\3\2\2\2\u01aa\u01b0\5k\66\2\u01ab\u01af\5k\66\2"+
		"\u01ac\u01af\5m\67\2\u01ad\u01af\t\4\2\2\u01ae\u01ab\3\2\2\2\u01ae\u01ac"+
		"\3\2\2\2\u01ae\u01ad\3\2\2\2\u01af\u01b2\3\2\2\2\u01b0\u01ae\3\2\2\2\u01b0"+
		"\u01b1\3\2\2\2\u01b1v\3\2\2\2\u01b2\u01b0\3\2\2\2\u01b3\u01b7\7)\2\2\u01b4"+
		"\u01b6\n\5\2\2\u01b5\u01b4\3\2\2\2\u01b6\u01b9\3\2\2\2\u01b7\u01b5\3\2"+
		"\2\2\u01b7\u01b8\3\2\2\2\u01b8\u01ba\3\2\2\2\u01b9\u01b7\3\2\2\2\u01ba"+
		"\u01bb\7)\2\2\u01bbx\3\2\2\2\u01bc\u01bd\5s:\2\u01bd\u01be\7\60\2\2\u01be"+
		"\u01bf\5s:\2\u01bfz\3\2\2\2\b\2\u0192\u01a7\u01ae\u01b0\u01b7\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}